{"version":3,"file":"GetPropertyState.js","sourceRoot":"","sources":["../../../src/states/GetPropertyState.ts"],"names":[],"mappings":"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","sourcesContent":["import { ContextState, PropertyKey } from \"./ContextState\";\nimport { Context } from \"src/Context\";\nimport { FunctionState } from \"./FunctionState\";\nimport { areArgumentsEqual, areArgumentArraysEqual } from \"../Utilities\";\nimport { Arg } from \"../Arguments\";\n\nconst Nothing = Symbol();\n\nexport class GetPropertyState implements ContextState {\n    private returns: any[]|Symbol;\n    private mimicks: Function|null;\n\n    private _callCount: number;\n    private _functionState?: FunctionState;\n\n    private get isFunction(): boolean {\n        return !!this._functionState\n    }\n\n    public get property() {\n        return this._property;\n    }\n\n    public get callCount() {\n        return this._callCount;\n    }\n\n    public get functionState(): FunctionState | undefined {\n        return this._functionState\n    }\n\n    constructor(private _property: PropertyKey) {\n        this.returns = Nothing;\n        this.mimicks = null;\n        this._callCount = 0;\n    }\n\n    apply(context: Context, args: any[]) {\n        this._callCount = 0;\n\n        if (this.functionState) {\n            console.log('got matching function state')\n            return this.functionState.apply(context, args);\n        }\n\n        // console.log('creating new function state', args)\n        var functionState = new FunctionState(this);\n        context.state = functionState;\n        this._functionState = functionState\n\n        return context.apply(args);\n    }\n\n    set(context: Context, property: PropertyKey, value: any) {\n    }\n\n    get(context: Context, property: PropertyKey) {\n        const hasExpectations = context.initialState.hasExpectations;\n\n        if (property === 'then')\n            return void 0;\n\n        if(this.isFunction)\n            return context.proxy;\n\n        if(property === 'mimicks') {\n            return (input: Function) => {\n                this.mimicks = input;\n                this._callCount--;\n\n                context.state = context.initialState;\n            }\n        }\n\n        if(property === 'returns') {\n            if(this.returns !== Nothing)\n                throw new Error('The return value for the property ' + this._property.toString() + ' has already been set to ' + this.returns);\n\n            return (...returns: any[]) => {\n                this.returns = returns;\n                this._callCount--;\n\n                context.state = context.initialState;\n            };\n        }\n\n        if(!hasExpectations) {\n            this._callCount++;\n\n            if(this.mimicks)\n                return this.mimicks.apply(this.mimicks);\n\n            if(this.returns !== Nothing) {\n                var returnsArray = this.returns as any[];\n                if(returnsArray.length === 1)\n                    return returnsArray[0];\n        \n                return returnsArray[this._callCount-1];\n            }\n        }\n\n        context.initialState.assertCallCountMatchesExpectations(\n            [[]],  // I'm not sure what this was supposed to mean\n            this.callCount,\n            'property',\n            this.property,\n            []);\n\n        return context.proxy;\n    }\n}"]}